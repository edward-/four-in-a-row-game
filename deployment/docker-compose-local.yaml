version: '3.8'
services:
  postgres:
    image: postgres:16.2-alpine
    restart: always
    environment:
      - POSTGRES_USER=rowgame
      - POSTGRES_PASSWORD=rowgame
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 3s
      retries: 10
    volumes:
      - postgres-database:/data/postgres
      - ./scripts:/docker-entrypoint-initdb.d

  cache:
    image: redis:7.2-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass crwh1xQGB4s1edByiB0G
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 10
    volumes: 
      - redis-cache:/data/redis

  migrate:
    build:
      context: ../
      dockerfile: deployment/Dockerfile.migration
    depends_on:
      postgres:
        condition: service_healthy
      cache:
        condition: service_healthy
    environment:
      - GO_ENVIRONMENT=docker
    volumes:
      - ./migrations:/migrations
    command:
      ["./migrator", "migrate", "up"]

  app:
    build:
      context: ../
      dockerfile: deployment/Dockerfile
    restart: always
    ports:
      - '8080:8080'
    depends_on:
      migrate:
        condition: service_healthy
      postgres:
        condition: service_healthy
      cache:
        condition: service_healthy
    links:
      - postgres
      - cache
    environment:
      - GO_ENVIRONMENT=docker

volumes:
  redis-cache:
    driver: local
  postgres-database:
    driver: local