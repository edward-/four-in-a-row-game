
name: Terraform
run-name: ${{ github.actor }} is deploying by terraform

on:
  push:
    branches: [ "main" ]

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tf
    steps:

    - name: Checkout code
      uses: actions/checkout@v4.1.1

    - name: Terraform Setup
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'tf'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_KEY }}

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'tf'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_KEY }}
  
  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    environment: terraform-apply
    defaults:
      run:
        working-directory: ./tf
    steps:

    - name: Checkout code
      uses: actions/checkout@v4.1.1

    - name: Terraform Setup
      uses: hashicorp/setup-terraform@v1
      
    - name: Terraform Init
      run: terraform init
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'tf'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_KEY }}
        
    - name: Terraform validate
      run: terraform validate

    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: 'tf'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_KEY }}