name: CI
run-name: ${{ github.actor }} is running tests and creating docker image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4

    - name: Start containers
      run: docker-compose -f "./deployment/docker-compose.yaml" up -d --build

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Install dependencies
      run: |        
        go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

    - name: Migration
      run: GO_ENVIRONMENT=test go run cmd/*.go migrate up

    - name: Test
      run: GO_ENVIRONMENT=test CONFIG_FOLDER=../../../config go test -v ./internal/tests/integration/...

    - name: Stop containers
      if: always()
      run: docker-compose -f ./deployment/docker-compose.yaml down

  deploy:
    name: build && push image to docker hub
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'
    
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: build and push api
        id: build-push-api
        uses: docker/build-push-action@v3
        with:
          context: .
          file: deployment/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/for-in-a-row-game:latest,${{ secrets.DOCKERHUB_USERNAME }}/for-in-a-row-game:${{ github.sha }}